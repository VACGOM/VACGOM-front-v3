/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v3/vaccinations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["createVaccinations"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 유저 상세정보 조회 API */
        get: operations["getUserDetail"];
        put?: never;
        /**
         * 회원 가입 API
         * @description
         *                 엑세스 토큰 필요 X
         *
         */
        post: operations["signup"];
        /** 회원 탈퇴 API */
        delete: operations["revoke"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/invitation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 초대 코드 조회 API */
        post: operations["getBabiesByInvitationCode"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/invitation/my": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 초대 코드 생성 API */
        post: operations["createInvitationCode"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/care-history/snack": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 간식 기록 추가 API */
        post: operations["addBreastFeeding"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/care-history/sleep": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 수면 기록 추가 API */
        post: operations["addBreastFeeding_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/care-history/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 건강 기록 추가 API */
        post: operations["addBreastFeeding_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/care-history/diaper": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 기저귀 기록 추가 API */
        post: operations["addBreastFeeding_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/care-history/breast-pumping": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 유축 기록 추가 API */
        post: operations["addBreastFeeding_4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/care-history/breast-feeding": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 모유 수유 기록 추가 API */
        post: operations["addBreastFeeding_5"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/care-history/bath": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 목욕 기록 추가 API */
        post: operations["addBreastFeeding_6"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/care-history/baby-formula": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 분유 기록 추가 API */
        post: operations["addBreastFeeding_7"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/care-history/baby-food": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 이유식 기록 추가 API */
        post: operations["addBreastFeeding_8"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/babies/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 아기 프로필 이미지 업로드 API */
        post: operations["uploadBabyImage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 로그아웃 API */
        post: operations["logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/auth/login/{provider}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 소셜 로그인 API
         * @description
         *                 엑세스 토큰 필요 X
         *
         */
        post: operations["socialLogin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/auth/reissue": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 엑세스 토큰 재발급 API
         * @description
         *                 헤더에 refresh Token 필요
         *
         */
        patch: operations["reIssueAccessToken"];
        trace?: never;
    };
    "/api/v3/care-history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 육아 기록 통계 조회(일간) API */
        get: operations["getCareHistoryByExecutionDate"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ErrorResponse: {
            timeStamp: string;
            errorCode: string;
            errorMessage: string;
            details?: Record<string, never>;
        };
        ClientRequest: {
            vaccinations: components["schemas"]["VaccinationRequest"][];
        };
        VaccinationRequest: {
            vaccineName: string;
            /** Format: int64 */
            doseRound: number;
            doseDescription?: string;
            /** Format: date */
            vaccinatedDate: string;
            vaccinationFacility?: string;
            vaccineManufacturer?: string;
            vaccineProductName?: string;
            vaccineLotNumber?: string;
        };
        "SignupDto.Response": {
            accessToken: string;
            refreshToken: string;
        };
        Baby: {
            name: string;
            /** @enum {string} */
            gender: "MALE" | "FEMALE";
            profileImg?: string;
            /** Format: date */
            birthday: string;
        };
        "SignupDto.Request": {
            registerToken: string;
            nickname: string;
            babies: components["schemas"]["Baby"][];
        };
        "InvitationDto.Request.Get": {
            invitationCode: string;
        };
        "BabyDto.Response.Detail": {
            /** Format: uuid */
            id: string;
            name: string;
            profileImg?: string;
            /** @enum {string} */
            gender: "MALE" | "FEMALE";
            /** Format: date */
            birthday: string;
        };
        "BaseResponseListBabyDto.Response.Detail": {
            result: boolean;
            message?: string;
            data?: components["schemas"]["BabyDto.Response.Detail"][];
        };
        "InvitationDto.Response.Create": {
            invitationCode: string;
        };
        "InvitationDto.Request.Create": {
            /** Format: uuid */
            babyId?: string;
        };
        "SnackDto.Request": {
            /** Format: uuid */
            babyId: string;
            memo: string;
            /** Format: date-time */
            executionTime: string;
        };
        "SleepDto.Request": {
            /** Format: uuid */
            babyId: string;
            /** Format: date-time */
            startDate: string;
            /** Format: date-time */
            endDate: string;
            /** Format: date-time */
            executionTime: string;
        };
        "HealthDto.Request": {
            /** Format: uuid */
            babyId: string;
            /** Format: double */
            temperature: number;
            memo: string;
            /** Format: date-time */
            executionTime: string;
        };
        "DiaperDto.Request": {
            /** Format: uuid */
            babyId: string;
            /** @enum {string} */
            excrementType: "POO" | "PEE" | "POOPEE";
            /** Format: date-time */
            executionTime: string;
        };
        "BreastPumpingDto.Request": {
            /** Format: uuid */
            babyId: string;
            /** Format: int32 */
            amount: number;
            /** Format: date-time */
            executionTime: string;
        };
        "BreastFeedingDto.Request": {
            /** Format: uuid */
            babyId: string;
            /** Format: date-time */
            startDate: string;
            /** Format: date-time */
            endDate: string;
            /** @enum {string} */
            breastDirection: "LEFT" | "RIGHT";
            /** Format: date-time */
            executionTime: string;
        };
        "BathDto.Request": {
            /** Format: uuid */
            babyId: string;
            /** Format: date-time */
            startDate: string;
            /** Format: date-time */
            endDate: string;
            /** Format: date-time */
            executionTime: string;
        };
        "BabyFormulaDto.Request": {
            /** Format: uuid */
            babyId: string;
            /** Format: int32 */
            amount: number;
            /** Format: date-time */
            executionTime: string;
        };
        "BabyFoodDto.Request": {
            /** Format: uuid */
            babyId: string;
            /** Format: int32 */
            amount: number;
            /** Format: date-time */
            executionTime: string;
        };
        /** @description 이미지 바이너리 데이터 */
        UploadImage: {
            images: string[];
        };
        "BabyDto.Response.UploadedImage": {
            imageUrl: string;
        };
        "BaseResponseListBabyDto.Response.UploadedImage": {
            result: boolean;
            message?: string;
            data?: components["schemas"]["BabyDto.Response.UploadedImage"][];
        };
        "LoginDto.Response.Success": {
            accessToken: string;
            refreshToken: string;
        };
        "LoginDto.Response.Register": {
            registerToken: string;
        };
        /** @description 요청 body */
        "LoginDto.Request.Social": {
            accessToken: string;
        };
        "TokenDto.Response.Access": {
            accessToken: string;
        };
        "UserDto.Response.UserDetail": {
            /** Format: uuid */
            id: string;
            nickname: string;
            socialId?: string;
            /** @enum {string} */
            provider: "KAKAO";
            /** @enum {string} */
            role: "ROLE_USER";
            /** Format: date-time */
            createdAt: string;
        };
        AbstractDailyStatDto: {
            careName: string;
        };
        "CareHistoryDto.Response.DailyStat": {
            /** Format: uuid */
            babyId: string;
            /** Format: date */
            executionDate: string;
            careItems: {
                [key: string]: components["schemas"]["AbstractDailyStatDto"];
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    createVaccinations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClientRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getUserDetail: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        /** @example true */
                        result?: unknown;
                        /** @example  */
                        message?: unknown;
                        data?: components["schemas"]["UserDto.Response.UserDetail"];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    signup: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignupDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        /** @example true */
                        result?: unknown;
                        /** @example  */
                        message?: unknown;
                        data?: components["schemas"]["SignupDto.Response"];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    revoke: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getBabiesByInvitationCode: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvitationDto.Request.Get"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        /** @example true */
                        result?: unknown;
                        /** @example  */
                        message?: unknown;
                        data?: components["schemas"]["BaseResponseListBabyDto.Response.Detail"];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createInvitationCode: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvitationDto.Request.Create"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        /** @example true */
                        result?: unknown;
                        /** @example  */
                        message?: unknown;
                        data?: components["schemas"]["InvitationDto.Response.Create"];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    addBreastFeeding: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SnackDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    addBreastFeeding_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SleepDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    addBreastFeeding_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HealthDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    addBreastFeeding_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DiaperDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    addBreastFeeding_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BreastPumpingDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    addBreastFeeding_5: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BreastFeedingDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    addBreastFeeding_6: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BathDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    addBreastFeeding_7: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BabyFormulaDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    addBreastFeeding_8: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BabyFoodDto.Request"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    uploadBabyImage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": components["schemas"]["UploadImage"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example true */
                        result?: unknown;
                        /** @example  */
                        message?: unknown;
                        data?: components["schemas"]["BaseResponseListBabyDto.Response.UploadedImage"];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    socialLogin: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 소셜 로그인 Provider */
                provider: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginDto.Request.Social"];
            };
        };
        responses: {
            /** @description 로그인 성공 시 or 회원 가입이 필요한 경우 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        /** @example true */
                        result?: unknown;
                        /** @example  */
                        message?: unknown;
                        data?: components["schemas"]["LoginDto.Response.Success"] | components["schemas"]["LoginDto.Response.Register"];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    reIssueAccessToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        /** @example true */
                        result?: unknown;
                        /** @example  */
                        message?: unknown;
                        data?: components["schemas"]["TokenDto.Response.Access"];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getCareHistoryByExecutionDate: {
        parameters: {
            query: {
                babyId: string;
                executionDate: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        /** @example true */
                        result?: unknown;
                        /** @example  */
                        message?: unknown;
                        data?: components["schemas"]["CareHistoryDto.Response.DailyStat"];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
